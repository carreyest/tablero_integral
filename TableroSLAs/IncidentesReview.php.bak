<?php
//Include Common Files @1-7E2AE9F0
define("RelativePath", ".");
define("PathToCurrentPage", "/");
define("FileName", "IncidentesReview.php");
include_once(RelativePath . "/Common.php");
include_once(RelativePath . "/Template.php");
include_once(RelativePath . "/Sorter.php");
include_once(RelativePath . "/Navigator.php");
//End Include Common Files

class clsGridgrdIncidentesAUT { //grdIncidentesAUT class @2-C6D0D1EF

//Variables @2-7089C792

    // Public variables
    public $ComponentType = "Grid";
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $ErrorBlock;
    public $ds;
    public $DataSource;
    public $PageSize;
    public $IsEmpty;
    public $ForceIteration = false;
    public $HasRecord = false;
    public $SorterName = "";
    public $SorterDirection = "";
    public $PageNumber;
    public $RowNumber;
    public $ControlsVisible = array();

    public $CCSEvents = "";
    public $CCSEventResult;

    public $RelativePath = "";
    public $Attributes;

    // Grid Controls
    public $StaticControls;
    public $RowControls;
    public $Sorter_nombre;
    public $Sorter_servicio;
    public $Sorter_id_incidente;
    public $Sorter_Cumple_DISP_SOPORTE;
    public $Sorter_Cumple_Inc_TiempoAsignacion;
    public $Sorter_Cumple_Inc_TiempoSolucion;
    public $Sorter_MesReporte;
    public $Sorter_AnioReporte;
    public $Sorter_Obs_Proceso;
    public $Sorter_descartar;
    public $Sorter_Paquete;
    public $Sorter_severidad;
//End Variables

//Class_Initialize Event @2-6470821D
    function clsGridgrdIncidentesAUT($RelativePath, & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "grdIncidentesAUT";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Errors = new clsErrors();
        $this->ErrorBlock = "Grid grdIncidentesAUT";
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->DataSource = new clsgrdIncidentesAUTDataSource($this);
        $this->ds = & $this->DataSource;
        $this->PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(!is_numeric($this->PageSize) || !strlen($this->PageSize))
            $this->PageSize = 25;
        else
            $this->PageSize = intval($this->PageSize);
        if ($this->PageSize > 100)
            $this->PageSize = 100;
        if($this->PageSize == 0)
            $this->Errors->addError("<p>Form: Grid " . $this->ComponentName . "<br>Error: (CCS06) Invalid page size.</p>");
        $this->PageNumber = intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0) $this->PageNumber = 1;
        $this->SorterName = CCGetParam("grdIncidentesAUTOrder", "");
        $this->SorterDirection = CCGetParam("grdIncidentesAUTDir", "");

        $this->nombre = new clsControl(ccsLabel, "nombre", "nombre", ccsText, "", CCGetRequestParam("nombre", ccsGet, NULL), $this);
        $this->servicio = new clsControl(ccsLabel, "servicio", "servicio", ccsText, "", CCGetRequestParam("servicio", ccsGet, NULL), $this);
        $this->id_incidente = new clsControl(ccsLink, "id_incidente", "id_incidente", ccsText, "", CCGetRequestParam("id_incidente", ccsGet, NULL), $this);
        $this->id_incidente->Page = "CalificaIncidenteCAPC.php";
        $this->Cumple_DISP_SOPORTE = new clsControl(ccsLabel, "Cumple_DISP_SOPORTE", "Cumple_DISP_SOPORTE", ccsBoolean, $CCSLocales->GetFormatInfo("BooleanFormat"), CCGetRequestParam("Cumple_DISP_SOPORTE", ccsGet, NULL), $this);
        $this->Cumple_Inc_TiempoAsignacion = new clsControl(ccsLabel, "Cumple_Inc_TiempoAsignacion", "Cumple_Inc_TiempoAsignacion", ccsBoolean, $CCSLocales->GetFormatInfo("BooleanFormat"), CCGetRequestParam("Cumple_Inc_TiempoAsignacion", ccsGet, NULL), $this);
        $this->Cumple_Inc_TiempoSolucion = new clsControl(ccsLabel, "Cumple_Inc_TiempoSolucion", "Cumple_Inc_TiempoSolucion", ccsBoolean, $CCSLocales->GetFormatInfo("BooleanFormat"), CCGetRequestParam("Cumple_Inc_TiempoSolucion", ccsGet, NULL), $this);
        $this->MesReporte = new clsControl(ccsLabel, "MesReporte", "MesReporte", ccsInteger, "", CCGetRequestParam("MesReporte", ccsGet, NULL), $this);
        $this->AnioReporte = new clsControl(ccsLabel, "AnioReporte", "AnioReporte", ccsInteger, "", CCGetRequestParam("AnioReporte", ccsGet, NULL), $this);
        $this->Obs_Proceso = new clsControl(ccsLabel, "Obs_Proceso", "Obs_Proceso", ccsText, "", CCGetRequestParam("Obs_Proceso", ccsGet, NULL), $this);
        $this->descartar = new clsControl(ccsLabel, "descartar", "descartar", ccsBoolean, $CCSLocales->GetFormatInfo("BooleanFormat"), CCGetRequestParam("descartar", ccsGet, NULL), $this);
        $this->Paquete = new clsControl(ccsLabel, "Paquete", "Paquete", ccsText, "", CCGetRequestParam("Paquete", ccsGet, NULL), $this);
        $this->severidad = new clsControl(ccsLabel, "severidad", "severidad", ccsInteger, "", CCGetRequestParam("severidad", ccsGet, NULL), $this);
        $this->Sorter_nombre = new clsSorter($this->ComponentName, "Sorter_nombre", $FileName, $this);
        $this->Sorter_servicio = new clsSorter($this->ComponentName, "Sorter_servicio", $FileName, $this);
        $this->Sorter_id_incidente = new clsSorter($this->ComponentName, "Sorter_id_incidente", $FileName, $this);
        $this->Sorter_Cumple_DISP_SOPORTE = new clsSorter($this->ComponentName, "Sorter_Cumple_DISP_SOPORTE", $FileName, $this);
        $this->Sorter_Cumple_Inc_TiempoAsignacion = new clsSorter($this->ComponentName, "Sorter_Cumple_Inc_TiempoAsignacion", $FileName, $this);
        $this->Sorter_Cumple_Inc_TiempoSolucion = new clsSorter($this->ComponentName, "Sorter_Cumple_Inc_TiempoSolucion", $FileName, $this);
        $this->Sorter_MesReporte = new clsSorter($this->ComponentName, "Sorter_MesReporte", $FileName, $this);
        $this->Sorter_AnioReporte = new clsSorter($this->ComponentName, "Sorter_AnioReporte", $FileName, $this);
        $this->Sorter_Obs_Proceso = new clsSorter($this->ComponentName, "Sorter_Obs_Proceso", $FileName, $this);
        $this->Sorter_descartar = new clsSorter($this->ComponentName, "Sorter_descartar", $FileName, $this);
        $this->Sorter_Paquete = new clsSorter($this->ComponentName, "Sorter_Paquete", $FileName, $this);
        $this->Sorter_severidad = new clsSorter($this->ComponentName, "Sorter_severidad", $FileName, $this);
        $this->Navigator = new clsNavigator($this->ComponentName, "Navigator", $FileName, 10, tpCentered, $this);
        $this->Navigator->PageSizes = array("1", "5", "10", "25", "50");
    }
//End Class_Initialize Event

//Initialize Method @2-90E704C5
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = & $this->PageSize;
        $this->DataSource->AbsolutePage = & $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//Show Method @2-5F4E959C
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $this->RowNumber = 0;


        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();
        $this->HasRecord = $this->DataSource->has_next_record();
        $this->IsEmpty = ! $this->HasRecord;
        $this->Attributes->Show();

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $GridBlock = "Grid " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $GridBlock;


        if (!$this->IsEmpty) {
            $this->ControlsVisible["nombre"] = $this->nombre->Visible;
            $this->ControlsVisible["servicio"] = $this->servicio->Visible;
            $this->ControlsVisible["id_incidente"] = $this->id_incidente->Visible;
            $this->ControlsVisible["Cumple_DISP_SOPORTE"] = $this->Cumple_DISP_SOPORTE->Visible;
            $this->ControlsVisible["Cumple_Inc_TiempoAsignacion"] = $this->Cumple_Inc_TiempoAsignacion->Visible;
            $this->ControlsVisible["Cumple_Inc_TiempoSolucion"] = $this->Cumple_Inc_TiempoSolucion->Visible;
            $this->ControlsVisible["MesReporte"] = $this->MesReporte->Visible;
            $this->ControlsVisible["AnioReporte"] = $this->AnioReporte->Visible;
            $this->ControlsVisible["Obs_Proceso"] = $this->Obs_Proceso->Visible;
            $this->ControlsVisible["descartar"] = $this->descartar->Visible;
            $this->ControlsVisible["Paquete"] = $this->Paquete->Visible;
            $this->ControlsVisible["severidad"] = $this->severidad->Visible;
            while ($this->ForceIteration || (($this->RowNumber < $this->PageSize) &&  ($this->HasRecord = $this->DataSource->has_next_record()))) {
                $this->RowNumber++;
                if ($this->HasRecord) {
                    $this->DataSource->next_record();
                    $this->DataSource->SetValues();
                }
                $Tpl->block_path = $ParentPath . "/" . $GridBlock . "/Row";
                $this->nombre->SetValue($this->DataSource->nombre->GetValue());
                $this->servicio->SetValue($this->DataSource->servicio->GetValue());
                $this->id_incidente->SetValue($this->DataSource->id_incidente->GetValue());
                $this->id_incidente->Parameters = CCGetQueryString("QueryString", array("ccsForm"));
                $this->id_incidente->Parameters = CCAddParam($this->id_incidente->Parameters, "id_incidente", $this->DataSource->f("id_incidente"));
                $this->Cumple_DISP_SOPORTE->SetValue($this->DataSource->Cumple_DISP_SOPORTE->GetValue());
                $this->Cumple_Inc_TiempoAsignacion->SetValue($this->DataSource->Cumple_Inc_TiempoAsignacion->GetValue());
                $this->Cumple_Inc_TiempoSolucion->SetValue($this->DataSource->Cumple_Inc_TiempoSolucion->GetValue());
                $this->MesReporte->SetValue($this->DataSource->MesReporte->GetValue());
                $this->AnioReporte->SetValue($this->DataSource->AnioReporte->GetValue());
                $this->Obs_Proceso->SetValue($this->DataSource->Obs_Proceso->GetValue());
                $this->descartar->SetValue($this->DataSource->descartar->GetValue());
                $this->Paquete->SetValue($this->DataSource->Paquete->GetValue());
                $this->severidad->SetValue($this->DataSource->severidad->GetValue());
                $this->Attributes->SetValue("rowNumber", $this->RowNumber);
                $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShowRow", $this);
                $this->Attributes->Show();
                $this->nombre->Show();
                $this->servicio->Show();
                $this->id_incidente->Show();
                $this->Cumple_DISP_SOPORTE->Show();
                $this->Cumple_Inc_TiempoAsignacion->Show();
                $this->Cumple_Inc_TiempoSolucion->Show();
                $this->MesReporte->Show();
                $this->AnioReporte->Show();
                $this->Obs_Proceso->Show();
                $this->descartar->Show();
                $this->Paquete->Show();
                $this->severidad->Show();
                $Tpl->block_path = $ParentPath . "/" . $GridBlock;
                $Tpl->parse("Row", true);
            }
        }
        else { // Show NoRecords block if no records are found
            $this->Attributes->Show();
            $Tpl->parse("NoRecords", false);
        }

        $errors = $this->GetErrors();
        if(strlen($errors))
        {
            $Tpl->replaceblock("", $errors);
            $Tpl->block_path = $ParentPath;
            return;
        }
        $this->Navigator->PageNumber = $this->DataSource->AbsolutePage;
        $this->Navigator->PageSize = $this->PageSize;
        if ($this->DataSource->RecordsCount == "CCS not counted")
            $this->Navigator->TotalPages = $this->DataSource->AbsolutePage + ($this->DataSource->next_record() ? 1 : 0);
        else
            $this->Navigator->TotalPages = $this->DataSource->PageCount();
        if ($this->Navigator->TotalPages <= 1) {
            $this->Navigator->Visible = false;
        }
        $this->Sorter_nombre->Show();
        $this->Sorter_servicio->Show();
        $this->Sorter_id_incidente->Show();
        $this->Sorter_Cumple_DISP_SOPORTE->Show();
        $this->Sorter_Cumple_Inc_TiempoAsignacion->Show();
        $this->Sorter_Cumple_Inc_TiempoSolucion->Show();
        $this->Sorter_MesReporte->Show();
        $this->Sorter_AnioReporte->Show();
        $this->Sorter_Obs_Proceso->Show();
        $this->Sorter_descartar->Show();
        $this->Sorter_Paquete->Show();
        $this->Sorter_severidad->Show();
        $this->Navigator->Show();
        $Tpl->parse();
        $Tpl->block_path = $ParentPath;
        $this->DataSource->close();
    }
//End Show Method

//GetErrors Method @2-3F910CDE
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->nombre->Errors->ToString());
        $errors = ComposeStrings($errors, $this->servicio->Errors->ToString());
        $errors = ComposeStrings($errors, $this->id_incidente->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Cumple_DISP_SOPORTE->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Cumple_Inc_TiempoAsignacion->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Cumple_Inc_TiempoSolucion->Errors->ToString());
        $errors = ComposeStrings($errors, $this->MesReporte->Errors->ToString());
        $errors = ComposeStrings($errors, $this->AnioReporte->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Obs_Proceso->Errors->ToString());
        $errors = ComposeStrings($errors, $this->descartar->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Paquete->Errors->ToString());
        $errors = ComposeStrings($errors, $this->severidad->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

} //End grdIncidentesAUT Class @2-FCB6E20C

class clsgrdIncidentesAUTDataSource extends clsDBcnDisenio {  //grdIncidentesAUTDataSource Class @2-6526C3F4

//DataSource Variables @2-4834F09F
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $CountSQL;
    public $wp;


    // Datasource fields
    public $nombre;
    public $servicio;
    public $id_incidente;
    public $Cumple_DISP_SOPORTE;
    public $Cumple_Inc_TiempoAsignacion;
    public $Cumple_Inc_TiempoSolucion;
    public $MesReporte;
    public $AnioReporte;
    public $Obs_Proceso;
    public $descartar;
    public $Paquete;
    public $severidad;
//End DataSource Variables

//DataSourceClass_Initialize Event @2-466AE329
    function clsgrdIncidentesAUTDataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Grid grdIncidentesAUT";
        $this->Initialize();
        $this->nombre = new clsField("nombre", ccsText, "");
        
        $this->servicio = new clsField("servicio", ccsText, "");
        
        $this->id_incidente = new clsField("id_incidente", ccsText, "");
        
        $this->Cumple_DISP_SOPORTE = new clsField("Cumple_DISP_SOPORTE", ccsBoolean, $this->BooleanFormat);
        
        $this->Cumple_Inc_TiempoAsignacion = new clsField("Cumple_Inc_TiempoAsignacion", ccsBoolean, $this->BooleanFormat);
        
        $this->Cumple_Inc_TiempoSolucion = new clsField("Cumple_Inc_TiempoSolucion", ccsBoolean, $this->BooleanFormat);
        
        $this->MesReporte = new clsField("MesReporte", ccsInteger, "");
        
        $this->AnioReporte = new clsField("AnioReporte", ccsInteger, "");
        
        $this->Obs_Proceso = new clsField("Obs_Proceso", ccsText, "");
        
        $this->descartar = new clsField("descartar", ccsBoolean, $this->BooleanFormat);
        
        $this->Paquete = new clsField("Paquete", ccsText, "");
        
        $this->severidad = new clsField("severidad", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @2-223D8919
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            array("Sorter_nombre" => array("nombre", ""), 
            "Sorter_servicio" => array("servicio", ""), 
            "Sorter_id_incidente" => array("id_incidente", ""), 
            "Sorter_Cumple_DISP_SOPORTE" => array("Cumple_DISP_SOPORTE", ""), 
            "Sorter_Cumple_Inc_TiempoAsignacion" => array("Cumple_Inc_TiempoAsignacion", ""), 
            "Sorter_Cumple_Inc_TiempoSolucion" => array("Cumple_Inc_TiempoSolucion", ""), 
            "Sorter_MesReporte" => array("MesReporte", ""), 
            "Sorter_AnioReporte" => array("AnioReporte", ""), 
            "Sorter_Obs_Proceso" => array("Obs_Proceso", ""), 
            "Sorter_descartar" => array("descartar", ""), 
            "Sorter_Paquete" => array("Paquete", ""), 
            "Sorter_severidad" => array("severidad", "")));
    }
//End SetOrder Method

//Prepare Method @2-14D6CD9D
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
    }
//End Prepare Method

//Open Method @2-D5A093B8
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->CountSQL = "SELECT COUNT(*) FROM (select p.nombre\n" .
        ", s.nombre servicio\n" .
        ", q.id_incidente\n" .
        ", q.Cumple_DISP_SOPORTE \n" .
        ", q.Cumple_Inc_TiempoAsignacion\n" .
        ", q.Cumple_Inc_TiempoSolucion\n" .
        ", q.MesReporte, q.AnioReporte\n" .
        ", q.Obs_Proceso\n" .
        ", q.descartar\n" .
        ", q.Paquete \n" .
        ", i.severidad\n" .
        ", i.id_proveedor\n" .
        ", i.id_servicio_negocio \n" .
        "from calificacion_incidentes_aut q\n" .
        "	inner join Incidentes_Unicos_v  i on i.id_incidente_remedy   = q.id_incidente  \n" .
        "	inner join c_proveedor p on p.id_proveedor = i.id_proveedor \n" .
        "	inner join c_servicio s on s.id_servicio  = i.id_servicio_negocio \n" .
        ") cnt";
        $this->SQL = "select p.nombre\n" .
        ", s.nombre servicio\n" .
        ", q.id_incidente\n" .
        ", q.Cumple_DISP_SOPORTE \n" .
        ", q.Cumple_Inc_TiempoAsignacion\n" .
        ", q.Cumple_Inc_TiempoSolucion\n" .
        ", q.MesReporte, q.AnioReporte\n" .
        ", q.Obs_Proceso\n" .
        ", q.descartar\n" .
        ", q.Paquete \n" .
        ", i.severidad\n" .
        ", i.id_proveedor\n" .
        ", i.id_servicio_negocio \n" .
        "from calificacion_incidentes_aut q\n" .
        "	inner join Incidentes_Unicos_v  i on i.id_incidente_remedy   = q.id_incidente  \n" .
        "	inner join c_proveedor p on p.id_proveedor = i.id_proveedor \n" .
        "	inner join c_servicio s on s.id_servicio  = i.id_servicio_negocio \n" .
        "";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        if ($this->CountSQL) 
            $this->RecordsCount = CCGetDBValue(CCBuildSQL($this->CountSQL, $this->Where, ""), $this);
        else
            $this->RecordsCount = "CCS not counted";
        $this->query($this->OptimizeSQL(CCBuildSQL($this->SQL, $this->Where, $this->Order)));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
        $this->MoveToPage($this->AbsolutePage);
    }
//End Open Method

//SetValues Method @2-2C7E9AE5
    function SetValues()
    {
        $this->nombre->SetDBValue($this->f("nombre"));
        $this->servicio->SetDBValue($this->f("servicio"));
        $this->id_incidente->SetDBValue($this->f("id_incidente"));
        $this->Cumple_DISP_SOPORTE->SetDBValue(trim($this->f("Cumple_DISP_SOPORTE")));
        $this->Cumple_Inc_TiempoAsignacion->SetDBValue(trim($this->f("Cumple_Inc_TiempoAsignacion")));
        $this->Cumple_Inc_TiempoSolucion->SetDBValue(trim($this->f("Cumple_Inc_TiempoSolucion")));
        $this->MesReporte->SetDBValue(trim($this->f("MesReporte")));
        $this->AnioReporte->SetDBValue(trim($this->f("AnioReporte")));
        $this->Obs_Proceso->SetDBValue($this->f("Obs_Proceso"));
        $this->descartar->SetDBValue(trim($this->f("descartar")));
        $this->Paquete->SetDBValue($this->f("Paquete"));
        $this->severidad->SetDBValue(trim($this->f("severidad")));
    }
//End SetValues Method

} //End grdIncidentesAUTDataSource Class @2-FCB6E20C



//Initialize Page @1-C82D258C
// Variables
$FileName = "";
$Redirect = "";
$Tpl = "";
$TemplateFileName = "";
$BlockToParse = "";
$ComponentName = "";
$Attributes = "";

// Events;
$CCSEvents = "";
$CCSEventResult = "";

$FileName = FileName;
$Redirect = "";
$TemplateFileName = "IncidentesReview.html";
$BlockToParse = "main";
$TemplateEncoding = "CP1252";
$ContentType = "text/html";
$PathToRoot = "./";
$Charset = $Charset ? $Charset : "windows-1252";
//End Initialize Page

//Include events file @1-52F42F8E
include_once("./IncidentesReview_events.php");
//End Include events file

//Before Initialize @1-E870CEBC
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeInitialize", $MainPage);
//End Before Initialize

//Initialize Objects @1-B3EBD9CA
$DBcnDisenio = new clsDBcnDisenio();
$MainPage->Connections["cnDisenio"] = & $DBcnDisenio;
$Attributes = new clsAttributes("page:");
$MainPage->Attributes = & $Attributes;

// Controls
$grdIncidentesAUT = new clsGridgrdIncidentesAUT("", $MainPage);
$MainPage->grdIncidentesAUT = & $grdIncidentesAUT;
$grdIncidentesAUT->Initialize();

BindEvents();

$CCSEventResult = CCGetEvent($CCSEvents, "AfterInitialize", $MainPage);

if ($Charset) {
    header("Content-Type: " . $ContentType . "; charset=" . $Charset);
} else {
    header("Content-Type: " . $ContentType);
}
//End Initialize Objects

//Initialize HTML Template @1-E710DB26
$CCSEventResult = CCGetEvent($CCSEvents, "OnInitializeView", $MainPage);
$Tpl = new clsTemplate($FileEncoding, $TemplateEncoding);
$Tpl->LoadTemplate(PathToCurrentPage . $TemplateFileName, $BlockToParse, "CP1252");
$Tpl->block_path = "/$BlockToParse";
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeShow", $MainPage);
$Attributes->SetValue("pathToRoot", "");
$Attributes->Show();
//End Initialize HTML Template

//Go to destination page @1-5A556849
if($Redirect)
{
    $CCSEventResult = CCGetEvent($CCSEvents, "BeforeUnload", $MainPage);
    $DBcnDisenio->close();
    header("Location: " . $Redirect);
    unset($grdIncidentesAUT);
    unset($Tpl);
    exit;
}
//End Go to destination page

//Show Page @1-7CE34050
$grdIncidentesAUT->Show();
$Tpl->block_path = "";
$Tpl->Parse($BlockToParse, false);
if (!isset($main_block)) $main_block = $Tpl->GetVar($BlockToParse);
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeOutput", $MainPage);
if ($CCSEventResult) echo $main_block;
//End Show Page

//Unload Page @1-02326A48
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeUnload", $MainPage);
$DBcnDisenio->close();
unset($grdIncidentesAUT);
unset($Tpl);
//End Unload Page


?>
