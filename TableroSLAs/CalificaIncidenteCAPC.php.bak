<?php
//Include Common Files @1-CA347DD2
define("RelativePath", ".");
define("PathToCurrentPage", "/");
define("FileName", "CalificaIncidenteCAPC.php");
include_once(RelativePath . "/Common.php");
include_once(RelativePath . "/Template.php");
include_once(RelativePath . "/Sorter.php");
include_once(RelativePath . "/Navigator.php");
//End Include Common Files

class clsRecordcalificacion_incidentes_M { //calificacion_incidentes_M Class @2-D02769B7

//Variables @2-9E315808

    // Public variables
    public $ComponentType = "Record";
    public $ComponentName;
    public $Parent;
    public $HTMLFormAction;
    public $PressedButton;
    public $Errors;
    public $ErrorBlock;
    public $FormSubmitted;
    public $FormEnctype;
    public $Visible;
    public $IsEmpty;

    public $CCSEvents = "";
    public $CCSEventResult;

    public $RelativePath = "";

    public $InsertAllowed = false;
    public $UpdateAllowed = false;
    public $DeleteAllowed = false;
    public $ReadAllowed   = false;
    public $EditMode      = false;
    public $ds;
    public $DataSource;
    public $ValidatingControls;
    public $Controls;
    public $Attributes;

    // Class variables
//End Variables

//Class_Initialize Event @2-374E8DE9
    function clsRecordcalificacion_incidentes_M($RelativePath, & $Parent)
    {

        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->Visible = true;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Errors = new clsErrors();
        $this->ErrorBlock = "Record calificacion_incidentes_M/Error";
        $this->DataSource = new clscalificacion_incidentes_MDataSource($this);
        $this->ds = & $this->DataSource;
        $this->UpdateAllowed = true;
        $this->DeleteAllowed = true;
        $this->ReadAllowed = true;
        if($this->Visible)
        {
            $this->ComponentName = "calificacion_incidentes_M";
            $this->Attributes = new clsAttributes($this->ComponentName . ":");
            $CCSForm = explode(":", CCGetFromGet("ccsForm", ""), 2);
            if(sizeof($CCSForm) == 1)
                $CCSForm[1] = "";
            list($FormName, $FormMethod) = $CCSForm;
            $this->EditMode = ($FormMethod == "Edit");
            $this->FormEnctype = "application/x-www-form-urlencoded";
            $this->FormSubmitted = ($FormName == $this->ComponentName);
            $Method = $this->FormSubmitted ? ccsPost : ccsGet;
            $this->Button_Update = new clsButton("Button_Update", $Method, $this);
            $this->Button_Delete = new clsButton("Button_Delete", $Method, $this);
            $this->Cumple_DISP_SOPORTE = new clsControl(ccsCheckBox, "Cumple_DISP_SOPORTE", "Cumple DISP SOPORTE", ccsBoolean, $CCSLocales->GetFormatInfo("BooleanFormat"), CCGetRequestParam("Cumple_DISP_SOPORTE", $Method, NULL), $this);
            $this->Cumple_DISP_SOPORTE->CheckedValue = true;
            $this->Cumple_DISP_SOPORTE->UncheckedValue = false;
            $this->Cumple_Inc_TiempoSolucion = new clsControl(ccsCheckBox, "Cumple_Inc_TiempoSolucion", "Cumple Inc Tiempo Solucion", ccsBoolean, $CCSLocales->GetFormatInfo("BooleanFormat"), CCGetRequestParam("Cumple_Inc_TiempoSolucion", $Method, NULL), $this);
            $this->Cumple_Inc_TiempoSolucion->CheckedValue = true;
            $this->Cumple_Inc_TiempoSolucion->UncheckedValue = false;
            $this->Cumple_Inc_TiempoAsignacion = new clsControl(ccsCheckBox, "Cumple_Inc_TiempoAsignacion", "Cumple Inc Tiempo Asignacion", ccsBoolean, $CCSLocales->GetFormatInfo("BooleanFormat"), CCGetRequestParam("Cumple_Inc_TiempoAsignacion", $Method, NULL), $this);
            $this->Cumple_Inc_TiempoAsignacion->CheckedValue = true;
            $this->Cumple_Inc_TiempoAsignacion->UncheckedValue = false;
            $this->FechaCierre = new clsControl(ccsTextBox, "FechaCierre", "Fecha Cierre", ccsDate, $DefaultDateFormat, CCGetRequestParam("FechaCierre", $Method, NULL), $this);
            $this->DatePicker_FechaCierre = new clsDatePicker("DatePicker_FechaCierre", "calificacion_incidentes_M", "FechaCierre", $this);
            $this->descartar = new clsControl(ccsCheckBox, "descartar", "Descartar", ccsBoolean, $CCSLocales->GetFormatInfo("BooleanFormat"), CCGetRequestParam("descartar", $Method, NULL), $this);
            $this->descartar->CheckedValue = true;
            $this->descartar->UncheckedValue = false;
            $this->Obs_Proceso = new clsControl(ccsTextArea, "Obs_Proceso", "Obs Proceso", ccsText, "", CCGetRequestParam("Obs_Proceso", $Method, NULL), $this);
            $this->MesReporte = new clsControl(ccsTextBox, "MesReporte", "Mes Reporte", ccsInteger, "", CCGetRequestParam("MesReporte", $Method, NULL), $this);
            $this->AnioReporte = new clsControl(ccsTextBox, "AnioReporte", "Anio Reporte", ccsInteger, "", CCGetRequestParam("AnioReporte", $Method, NULL), $this);
            $this->id_incidente = new clsControl(ccsLabel, "id_incidente", "id_incidente", ccsText, "", CCGetRequestParam("id_incidente", $Method, NULL), $this);
        }
    }
//End Class_Initialize Event

//Initialize Method @2-F5E179E7
    function Initialize()
    {

        if(!$this->Visible)
            return;

        $this->DataSource->Parameters["urlid_incidente"] = CCGetFromGet("id_incidente", NULL);
    }
//End Initialize Method

//Validate Method @2-552D147F
    function Validate()
    {
        global $CCSLocales;
        $Validation = true;
        $Where = "";
        $Validation = ($this->Cumple_DISP_SOPORTE->Validate() && $Validation);
        $Validation = ($this->Cumple_Inc_TiempoSolucion->Validate() && $Validation);
        $Validation = ($this->Cumple_Inc_TiempoAsignacion->Validate() && $Validation);
        $Validation = ($this->FechaCierre->Validate() && $Validation);
        $Validation = ($this->descartar->Validate() && $Validation);
        $Validation = ($this->Obs_Proceso->Validate() && $Validation);
        $Validation = ($this->MesReporte->Validate() && $Validation);
        $Validation = ($this->AnioReporte->Validate() && $Validation);
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "OnValidate", $this);
        $Validation =  $Validation && ($this->Cumple_DISP_SOPORTE->Errors->Count() == 0);
        $Validation =  $Validation && ($this->Cumple_Inc_TiempoSolucion->Errors->Count() == 0);
        $Validation =  $Validation && ($this->Cumple_Inc_TiempoAsignacion->Errors->Count() == 0);
        $Validation =  $Validation && ($this->FechaCierre->Errors->Count() == 0);
        $Validation =  $Validation && ($this->descartar->Errors->Count() == 0);
        $Validation =  $Validation && ($this->Obs_Proceso->Errors->Count() == 0);
        $Validation =  $Validation && ($this->MesReporte->Errors->Count() == 0);
        $Validation =  $Validation && ($this->AnioReporte->Errors->Count() == 0);
        return (($this->Errors->Count() == 0) && $Validation);
    }
//End Validate Method

//CheckErrors Method @2-2CB9E9BE
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->Cumple_DISP_SOPORTE->Errors->Count());
        $errors = ($errors || $this->Cumple_Inc_TiempoSolucion->Errors->Count());
        $errors = ($errors || $this->Cumple_Inc_TiempoAsignacion->Errors->Count());
        $errors = ($errors || $this->FechaCierre->Errors->Count());
        $errors = ($errors || $this->DatePicker_FechaCierre->Errors->Count());
        $errors = ($errors || $this->descartar->Errors->Count());
        $errors = ($errors || $this->Obs_Proceso->Errors->Count());
        $errors = ($errors || $this->MesReporte->Errors->Count());
        $errors = ($errors || $this->AnioReporte->Errors->Count());
        $errors = ($errors || $this->id_incidente->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//MasterDetail @2-ED598703
function SetPrimaryKeys($keyArray)
{
    $this->PrimaryKeys = $keyArray;
}
function GetPrimaryKeys()
{
    return $this->PrimaryKeys;
}
function GetPrimaryKey($keyName)
{
    return $this->PrimaryKeys[$keyName];
}
//End MasterDetail

//Operation Method @2-421D8E27
    function Operation()
    {
        if(!$this->Visible)
            return;

        global $Redirect;
        global $FileName;

        $this->DataSource->Prepare();
        if(!$this->FormSubmitted) {
            $this->EditMode = $this->DataSource->AllParametersSet;
            return;
        }

        if($this->FormSubmitted) {
            $this->PressedButton = $this->EditMode ? "Button_Update" : "";
            if($this->Button_Update->Pressed) {
                $this->PressedButton = "Button_Update";
            } else if($this->Button_Delete->Pressed) {
                $this->PressedButton = "Button_Delete";
            }
        }
        $Redirect = $FileName;
        if($this->PressedButton == "Button_Delete") {
            if(!CCGetEvent($this->Button_Delete->CCSEvents, "OnClick", $this->Button_Delete) || !$this->DeleteRow()) {
                $Redirect = "";
            }
        } else if($this->Validate()) {
            if($this->PressedButton == "Button_Update") {
                if(!CCGetEvent($this->Button_Update->CCSEvents, "OnClick", $this->Button_Update) || !$this->UpdateRow()) {
                    $Redirect = "";
                }
            }
        } else {
            $Redirect = "";
        }
        if ($Redirect)
            $this->DataSource->close();
    }
//End Operation Method

//UpdateRow Method @2-C12A6E51
    function UpdateRow()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeUpdate", $this);
        if(!$this->UpdateAllowed) return false;
        $this->DataSource->Cumple_DISP_SOPORTE->SetValue($this->Cumple_DISP_SOPORTE->GetValue(true));
        $this->DataSource->Cumple_Inc_TiempoSolucion->SetValue($this->Cumple_Inc_TiempoSolucion->GetValue(true));
        $this->DataSource->Cumple_Inc_TiempoAsignacion->SetValue($this->Cumple_Inc_TiempoAsignacion->GetValue(true));
        $this->DataSource->FechaCierre->SetValue($this->FechaCierre->GetValue(true));
        $this->DataSource->descartar->SetValue($this->descartar->GetValue(true));
        $this->DataSource->Obs_Proceso->SetValue($this->Obs_Proceso->GetValue(true));
        $this->DataSource->MesReporte->SetValue($this->MesReporte->GetValue(true));
        $this->DataSource->AnioReporte->SetValue($this->AnioReporte->GetValue(true));
        $this->DataSource->id_incidente->SetValue($this->id_incidente->GetValue(true));
        $this->DataSource->Update();
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterUpdate", $this);
        return (!$this->CheckErrors());
    }
//End UpdateRow Method

//DeleteRow Method @2-299D98C3
    function DeleteRow()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeDelete", $this);
        if(!$this->DeleteAllowed) return false;
        $this->DataSource->Delete();
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterDelete", $this);
        return (!$this->CheckErrors());
    }
//End DeleteRow Method

//Show Method @2-9527A791
    function Show()
    {
        global $CCSUseAmp;
        global $Tpl;
        global $FileName;
        global $CCSLocales;
        $Error = "";

        if(!$this->Visible)
            return;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $RecordBlock = "Record " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $RecordBlock;
        $this->EditMode = $this->EditMode && $this->ReadAllowed;
        if($this->EditMode) {
            if($this->DataSource->Errors->Count()){
                $this->Errors->AddErrors($this->DataSource->Errors);
                $this->DataSource->Errors->clear();
            }
            $this->DataSource->Open();
            if($this->DataSource->Errors->Count() == 0 && $this->DataSource->next_record()) {
                $this->DataSource->SetValues();
                $this->id_incidente->SetValue($this->DataSource->id_incidente->GetValue());
                if(!$this->FormSubmitted){
                    $this->Cumple_DISP_SOPORTE->SetValue($this->DataSource->Cumple_DISP_SOPORTE->GetValue());
                    $this->Cumple_Inc_TiempoSolucion->SetValue($this->DataSource->Cumple_Inc_TiempoSolucion->GetValue());
                    $this->Cumple_Inc_TiempoAsignacion->SetValue($this->DataSource->Cumple_Inc_TiempoAsignacion->GetValue());
                    $this->FechaCierre->SetValue($this->DataSource->FechaCierre->GetValue());
                    $this->descartar->SetValue($this->DataSource->descartar->GetValue());
                    $this->Obs_Proceso->SetValue($this->DataSource->Obs_Proceso->GetValue());
                    $this->MesReporte->SetValue($this->DataSource->MesReporte->GetValue());
                    $this->AnioReporte->SetValue($this->DataSource->AnioReporte->GetValue());
                }
            } else {
                $this->EditMode = false;
            }
        }

        if($this->FormSubmitted || $this->CheckErrors()) {
            $Error = "";
            $Error = ComposeStrings($Error, $this->Cumple_DISP_SOPORTE->Errors->ToString());
            $Error = ComposeStrings($Error, $this->Cumple_Inc_TiempoSolucion->Errors->ToString());
            $Error = ComposeStrings($Error, $this->Cumple_Inc_TiempoAsignacion->Errors->ToString());
            $Error = ComposeStrings($Error, $this->FechaCierre->Errors->ToString());
            $Error = ComposeStrings($Error, $this->DatePicker_FechaCierre->Errors->ToString());
            $Error = ComposeStrings($Error, $this->descartar->Errors->ToString());
            $Error = ComposeStrings($Error, $this->Obs_Proceso->Errors->ToString());
            $Error = ComposeStrings($Error, $this->MesReporte->Errors->ToString());
            $Error = ComposeStrings($Error, $this->AnioReporte->Errors->ToString());
            $Error = ComposeStrings($Error, $this->id_incidente->Errors->ToString());
            $Error = ComposeStrings($Error, $this->Errors->ToString());
            $Error = ComposeStrings($Error, $this->DataSource->Errors->ToString());
            $Tpl->SetVar("Error", $Error);
            $Tpl->Parse("Error", false);
        }
        $CCSForm = $this->EditMode ? $this->ComponentName . ":" . "Edit" : $this->ComponentName;
        $this->HTMLFormAction = $FileName . "?" . CCAddParam(CCGetQueryString("QueryString", ""), "ccsForm", $CCSForm);
        $Tpl->SetVar("Action", !$CCSUseAmp ? $this->HTMLFormAction : str_replace("&", "&amp;", $this->HTMLFormAction));
        $Tpl->SetVar("HTMLFormName", $this->ComponentName);
        $Tpl->SetVar("HTMLFormEnctype", $this->FormEnctype);
        $this->Button_Update->Visible = $this->EditMode && $this->UpdateAllowed;
        $this->Button_Delete->Visible = $this->EditMode && $this->DeleteAllowed;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        $this->Attributes->Show();
        if(!$this->Visible) {
            $Tpl->block_path = $ParentPath;
            return;
        }

        $this->Button_Update->Show();
        $this->Button_Delete->Show();
        $this->Cumple_DISP_SOPORTE->Show();
        $this->Cumple_Inc_TiempoSolucion->Show();
        $this->Cumple_Inc_TiempoAsignacion->Show();
        $this->FechaCierre->Show();
        $this->DatePicker_FechaCierre->Show();
        $this->descartar->Show();
        $this->Obs_Proceso->Show();
        $this->MesReporte->Show();
        $this->AnioReporte->Show();
        $this->id_incidente->Show();
        $Tpl->parse();
        $Tpl->block_path = $ParentPath;
        $this->DataSource->close();
    }
//End Show Method

} //End calificacion_incidentes_M Class @2-FCB6E20C

class clscalificacion_incidentes_MDataSource extends clsDBcnDisenio {  //calificacion_incidentes_MDataSource Class @2-07BC5AD2

//DataSource Variables @2-A7C5A832
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $UpdateParameters;
    public $DeleteParameters;
    public $wp;
    public $AllParametersSet;

    public $UpdateFields = array();

    // Datasource fields
    public $Cumple_DISP_SOPORTE;
    public $Cumple_Inc_TiempoSolucion;
    public $Cumple_Inc_TiempoAsignacion;
    public $FechaCierre;
    public $descartar;
    public $Obs_Proceso;
    public $MesReporte;
    public $AnioReporte;
    public $id_incidente;
//End DataSource Variables

//DataSourceClass_Initialize Event @2-A862979B
    function clscalificacion_incidentes_MDataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Record calificacion_incidentes_M/Error";
        $this->Initialize();
        $this->Cumple_DISP_SOPORTE = new clsField("Cumple_DISP_SOPORTE", ccsBoolean, $this->BooleanFormat);
        
        $this->Cumple_Inc_TiempoSolucion = new clsField("Cumple_Inc_TiempoSolucion", ccsBoolean, $this->BooleanFormat);
        
        $this->Cumple_Inc_TiempoAsignacion = new clsField("Cumple_Inc_TiempoAsignacion", ccsBoolean, $this->BooleanFormat);
        
        $this->FechaCierre = new clsField("FechaCierre", ccsDate, $this->DateFormat);
        
        $this->descartar = new clsField("descartar", ccsBoolean, $this->BooleanFormat);
        
        $this->Obs_Proceso = new clsField("Obs_Proceso", ccsText, "");
        
        $this->MesReporte = new clsField("MesReporte", ccsInteger, "");
        
        $this->AnioReporte = new clsField("AnioReporte", ccsInteger, "");
        
        $this->id_incidente = new clsField("id_incidente", ccsText, "");
        

        $this->UpdateFields["Cumple_DISP_SOPORTE"] = array("Name" => "Cumple_DISP_SOPORTE", "Value" => "", "DataType" => ccsBoolean);
        $this->UpdateFields["Cumple_Inc_TiempoSolucion"] = array("Name" => "Cumple_Inc_TiempoSolucion", "Value" => "", "DataType" => ccsBoolean);
        $this->UpdateFields["Cumple_Inc_TiempoAsignacion"] = array("Name" => "Cumple_Inc_TiempoAsignacion", "Value" => "", "DataType" => ccsBoolean);
        $this->UpdateFields["FechaCierre"] = array("Name" => "FechaCierre", "Value" => "", "DataType" => ccsDate, "OmitIfEmpty" => 1);
        $this->UpdateFields["descartar"] = array("Name" => "descartar", "Value" => "", "DataType" => ccsBoolean);
        $this->UpdateFields["Obs_Proceso"] = array("Name" => "Obs_Proceso", "Value" => "", "DataType" => ccsText, "OmitIfEmpty" => 1);
        $this->UpdateFields["MesReporte"] = array("Name" => "MesReporte", "Value" => "", "DataType" => ccsInteger, "OmitIfEmpty" => 1);
        $this->UpdateFields["AnioReporte"] = array("Name" => "AnioReporte", "Value" => "", "DataType" => ccsInteger, "OmitIfEmpty" => 1);
    }
//End DataSourceClass_Initialize Event

//Prepare Method @2-1F2F4A48
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "urlid_incidente", ccsText, "", "", $this->Parameters["urlid_incidente"], "", false);
        $this->AllParametersSet = $this->wp->AllParamsSet();
        $this->wp->Criterion[1] = $this->wp->Operation(opEqual, "id_incidente", $this->wp->GetDBValue("1"), $this->ToSQL($this->wp->GetDBValue("1"), ccsText),false);
        $this->Where = 
             $this->wp->Criterion[1];
    }
//End Prepare Method

//Open Method @2-616D5A24
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT * \n\n" .
        "FROM calificacion_incidentes_MC {SQL_Where} {SQL_OrderBy}";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->PageSize = 1;
        $this->query($this->OptimizeSQL(CCBuildSQL($this->SQL, $this->Where, $this->Order)));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @2-C63C0034
    function SetValues()
    {
        $this->Cumple_DISP_SOPORTE->SetDBValue(trim($this->f("Cumple_DISP_SOPORTE")));
        $this->Cumple_Inc_TiempoSolucion->SetDBValue(trim($this->f("Cumple_Inc_TiempoSolucion")));
        $this->Cumple_Inc_TiempoAsignacion->SetDBValue(trim($this->f("Cumple_Inc_TiempoAsignacion")));
        $this->FechaCierre->SetDBValue(trim($this->f("FechaCierre")));
        $this->descartar->SetDBValue(trim($this->f("descartar")));
        $this->Obs_Proceso->SetDBValue($this->f("Obs_Proceso"));
        $this->MesReporte->SetDBValue(trim($this->f("MesReporte")));
        $this->AnioReporte->SetDBValue(trim($this->f("AnioReporte")));
        $this->id_incidente->SetDBValue($this->f("id_incidente"));
    }
//End SetValues Method

//Update Method @2-4D4651F1
    function Update()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->CmdExecution = true;
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildUpdate", $this->Parent);
        $this->UpdateFields["Cumple_DISP_SOPORTE"]["Value"] = $this->Cumple_DISP_SOPORTE->GetDBValue(true);
        $this->UpdateFields["Cumple_Inc_TiempoSolucion"]["Value"] = $this->Cumple_Inc_TiempoSolucion->GetDBValue(true);
        $this->UpdateFields["Cumple_Inc_TiempoAsignacion"]["Value"] = $this->Cumple_Inc_TiempoAsignacion->GetDBValue(true);
        $this->UpdateFields["FechaCierre"]["Value"] = $this->FechaCierre->GetDBValue(true);
        $this->UpdateFields["descartar"]["Value"] = $this->descartar->GetDBValue(true);
        $this->UpdateFields["Obs_Proceso"]["Value"] = $this->Obs_Proceso->GetDBValue(true);
        $this->UpdateFields["MesReporte"]["Value"] = $this->MesReporte->GetDBValue(true);
        $this->UpdateFields["AnioReporte"]["Value"] = $this->AnioReporte->GetDBValue(true);
        $this->SQL = CCBuildUpdate("calificacion_incidentes_MC", $this->UpdateFields, $this);
        $this->SQL .= strlen($this->Where) ? " WHERE " . $this->Where : $this->Where;
        if (!strlen($this->Where) && $this->Errors->Count() == 0) 
            $this->Errors->addError($CCSLocales->GetText("CCS_CustomOperationError_MissingParameters"));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteUpdate", $this->Parent);
        if($this->Errors->Count() == 0 && $this->CmdExecution) {
            $this->query($this->SQL);
            $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteUpdate", $this->Parent);
        }
    }
//End Update Method

//Delete Method @2-2D659FF3
    function Delete()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->CmdExecution = true;
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildDelete", $this->Parent);
        $this->SQL = "DELETE FROM calificacion_incidentes_MC";
        $this->SQL = CCBuildSQL($this->SQL, $this->Where, "");
        if (!strlen($this->Where) && $this->Errors->Count() == 0) 
            $this->Errors->addError($CCSLocales->GetText("CCS_CustomOperationError_MissingParameters"));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteDelete", $this->Parent);
        if($this->Errors->Count() == 0 && $this->CmdExecution) {
            $this->query($this->SQL);
            $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteDelete", $this->Parent);
        }
    }
//End Delete Method

} //End calificacion_incidentes_MDataSource Class @2-FCB6E20C

//Initialize Page @1-C5612967
// Variables
$FileName = "";
$Redirect = "";
$Tpl = "";
$TemplateFileName = "";
$BlockToParse = "";
$ComponentName = "";
$Attributes = "";

// Events;
$CCSEvents = "";
$CCSEventResult = "";

$FileName = FileName;
$Redirect = "";
$TemplateFileName = "CalificaIncidenteCAPC.html";
$BlockToParse = "main";
$TemplateEncoding = "CP1252";
$ContentType = "text/html";
$PathToRoot = "./";
$Charset = $Charset ? $Charset : "windows-1252";
//End Initialize Page

//Before Initialize @1-E870CEBC
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeInitialize", $MainPage);
//End Before Initialize

//Initialize Objects @1-B9DDA22A
$DBcnDisenio = new clsDBcnDisenio();
$MainPage->Connections["cnDisenio"] = & $DBcnDisenio;
$Attributes = new clsAttributes("page:");
$MainPage->Attributes = & $Attributes;

// Controls
$calificacion_incidentes_M = new clsRecordcalificacion_incidentes_M("", $MainPage);
$MainPage->calificacion_incidentes_M = & $calificacion_incidentes_M;
$calificacion_incidentes_M->Initialize();

$CCSEventResult = CCGetEvent($CCSEvents, "AfterInitialize", $MainPage);

if ($Charset) {
    header("Content-Type: " . $ContentType . "; charset=" . $Charset);
} else {
    header("Content-Type: " . $ContentType);
}
//End Initialize Objects

//Initialize HTML Template @1-E710DB26
$CCSEventResult = CCGetEvent($CCSEvents, "OnInitializeView", $MainPage);
$Tpl = new clsTemplate($FileEncoding, $TemplateEncoding);
$Tpl->LoadTemplate(PathToCurrentPage . $TemplateFileName, $BlockToParse, "CP1252");
$Tpl->block_path = "/$BlockToParse";
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeShow", $MainPage);
$Attributes->SetValue("pathToRoot", "");
$Attributes->Show();
//End Initialize HTML Template

//Execute Components @1-151F7996
$calificacion_incidentes_M->Operation();
//End Execute Components

//Go to destination page @1-C14E216D
if($Redirect)
{
    $CCSEventResult = CCGetEvent($CCSEvents, "BeforeUnload", $MainPage);
    $DBcnDisenio->close();
    header("Location: " . $Redirect);
    unset($calificacion_incidentes_M);
    unset($Tpl);
    exit;
}
//End Go to destination page

//Show Page @1-29C805B8
$calificacion_incidentes_M->Show();
$Tpl->block_path = "";
$Tpl->Parse($BlockToParse, false);
if (!isset($main_block)) $main_block = $Tpl->GetVar($BlockToParse);
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeOutput", $MainPage);
if ($CCSEventResult) echo $main_block;
//End Show Page

//Unload Page @1-216603D6
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeUnload", $MainPage);
$DBcnDisenio->close();
unset($calificacion_incidentes_M);
unset($Tpl);
//End Unload Page


?>
